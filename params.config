// Processus configuration
process {
    withName: SplitBam {
        executor = 'condor'
        clusterOptions = """
            getenv = true
            accounting_group = LongJob.Weekly
            concurrency_limits = touranch_limit:800
            batch_name = ForkMLSplitBam
        """
        cpus = 40
        memory = '50G'
        errorStrategy = 'retry'
        maxRetries = 2
    }
    withName: ParseBam {
        executor = 'condor'
        clusterOptions = """
            getenv = true
            accounting_group = ShortJob
            concurrency_limits = touranch_limit:20
            batch_name = ForkMLParseBam
        """
        cpus = 1
        memory = { 3200 * task.attempt + ' MB' }
        errorStrategy = 'retry'
        maxRetries = 2
    }
    withName: PreprocessFasta {
        executor = 'condor'
        clusterOptions = """
            getenv = true
            accounting_group = ShortJob
            concurrency_limits = touranch_limit:20
            batch_name = ForkMLPreprocessFasta
        """
        cpus = 1
        memory = { 4000 * task.attempt + ' MB' }
        errorStrategy = 'retry'
        maxRetries = 2
    }
    withName: Segmentation {
        executor = 'condor'
        clusterOptions = """
            requirements = TARGET.Has_sse4_1 && TARGET.has_avx2
            getenv = true
            accounting_group = LongJob.Weekly
            concurrency_limits = touranch_limit:37
            batch_name = ForkMLSegmentation
        """
        cpus = 1
        memory = { (10.GB * task.attempt) }
        errorStrategy = 'retry'
        maxRetries = 2
    }
    withName: Detection {
        executor = 'condor'
        clusterOptions = """
            getenv = true
            accounting_group = ShortJob
            concurrency_limits = touranch_limit:20
            batch_name = ForkMLDetection
        """
        cpus = 1
        memory = { 2200 * task.attempt + ' MB' }
        errorStrategy = 'retry'
        maxRetries = 1
    }
    withName: MergeTracks {
        executor = 'condor'
        clusterOptions = """
            getenv = true
            accounting_group = LongJob.Weekly
            concurrency_limits = touranch_limit:683
            batch_name = ForkMLMergeTracks
        """
        cpus = 10
        memory = '100G'
    }
    withName: MergeSignals {
        executor = 'condor'
        clusterOptions = """
            getenv = true
            accounting_group = LongJob.Weekly
            concurrency_limits = touranch_limit:683
            batch_name = ForkMLMergeSignals
        """
        cpus = 10
        memory = '100G'
    }
    withName: ComputeScore {
        executor = 'condor'
        clusterOptions = """
            getenv = true
            accounting_group = LongJob.Weekly
            concurrency_limits = touranch_limit:1366
            batch_name = ForkMLComputeScore
        """
        cpus = 3
        memory = '200G'
        errorStrategy = 'retry'
    }
    withName: InputStats {
        executor = 'condor'
        clusterOptions = """
            getenv = true
            accounting_group = LongJob.Weekly
            concurrency_limits = touranch_limit:1366
            batch_name = ForkMLInputStats
        """
        cpus = 1
        memory = '10G'
        errorStrategy = 'retry'
    }
    withName: AnalysisTracks {
        executor = 'condor'
        clusterOptions = """
            getenv = true
            accounting_group = LongJob.Weekly
            concurrency_limits = touranch_limit:1366
            batch_name = ForkMLAnalysisTracks
        """
        cpus = 20
        memory = '200G'
        errorStrategy = 'retry'
    }
}
executor.queueSize = 500

report {
    enabled = true
    overwrite = true
}
timeline {
    enabled = true
    overwrite = true
}
trace {
    enabled = true
    overwrite = true
}
